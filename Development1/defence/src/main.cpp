//**************************************************************************************//
//
//　GP2　スケルトンプログラム
//		skelton.cpp
//**************************************************************************************//
#include "define.h"
//gplibの名前空間を省略＝入力短縮のため
//外部のライブラリの場合は名前重複の恐れがあるため、消すこと。
using namespace gplib;

//**************************************************************************************//
//ライブラリ側で必要な変数　
//必要に応じて変更すること
//**************************************************************************************//
namespace gplib{
	namespace system{
		const char USERNAME[256] = "製作者:*****　ゲームプログラミングⅠ";

		const int	WINW = 960;										//PS VITAサイズ
		const int	WINH = 544;										//
		bool	WindowMode = true;								//フルスクリーン対応
		int		KeyboardMode = 0;									//pad disable:1 pad enable:0
	}
}


//**************************************************************************************//
//include記述
//**************************************************************************************//
//**************************************************************************************//
//作成するプログラムで必要となる変数、定数定義
//**************************************************************************************//


//**************************************************************************************//
//関数記述
//**************************************************************************************//

//======================================================================================//
//デフォルト関数定義
//======================================================================================//

//---------------------------------------------------------------------------------------
//ゲームループ
//---------------------------------------------------------------------------------------
void system::GameLoop()
{
	switch (stage::CheckStage()){
	case TITLESCENE:	Title();	break;
	case STAGE1SCENE:	Stage1();	break;
	case ENDSCENE:		End();		break;
	}
	effect::Step();
	esing::Step();
	effect::Draw();

}

//---------------------------------------------------------------------------------------
//ゲーム開始時のロード処理
void LoadGame()
{
	font::Draw_CreateFont(0, 30, "メイリオ");
	font::Draw_CreateFont(1, 20, "Buxton Sketch");


	graph::Draw_LoadObject("kuma", "res/gra/kuma.png");
	graph::Draw_LoadObject("yashiro", "res/gra/oyasiro.png");
	graph::Draw_LoadObject("shot", "res/gra/shot.png");
	graph::Draw_LoadObject("back", "res/gra/back.png");
	graph::Draw_LoadObject("beam", "res/gra/beam.png");
	graph::Draw_LoadObject("ora0", "res/gra/ora0.png");
	graph::Draw_LoadObject("ora1", "res/gra/ora1.png");
	graph::Draw_LoadObject("ora2", "res/gra/ora2.png");

}

//---------------------------------------------------------------------------------------
//プログラム全体の初期化
//フォントの作成、ローディング画面で使用する画像の読み込みなど
//起動時に一回だけ行う処理はここで行う
//以下は基本的に変更しない。
//---------------------------------------------------------------------------------------
void InitGame()
{
	//2Dカメラの注視点
	camera::InitCamera(system::WINW / 2, system::WINH / 2, 0.0f, 0.0f);

	effect::LoadReses();
}

void system::OnCreate()
{
	LoadGame();
	InitGame();
}
//---------------------------------------------------------------------------------------
//プログラム全体の後始末
//終了時に一回だけ行う処理はここで行う
//---------------------------------------------------------------------------------------
void system::OnDestroy()
{
}
//======================================================================================//
//WINDOW　メイン
//======================================================================================//
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPreInst, LPSTR lpszCmdLine, int nCmdShow)
{
	return system::DoWindow(hInstance, hPreInst, lpszCmdLine, nCmdShow);
}


